@use 'sass:map';
@use 'sass:math';
@use 'sass:string';

// General
//
// Settings that affect the work of the all toolkit.
//
// $browser-font-size = 16px - font size for converting [px to rem](section-sass-tools.html#kssref-sass-tools-functions-px2rem). 16px used because is default font size in settings of most browsers.
// $su = 0.25rem - space unit value
// $css-vars-fallback = false - add fallback for values in `grid-gutters` units
// $css-transition-time = 0.3s - default transition duration.
// $ratio-box-flex = false - adds a more advanced version of [Ratio-box](section-css_lib.html#kssref-css_lib-helpers-ratio-box) helper with an arbitrary height \- `ratio-box-flex`
// $wrapper-max-width = 1200px - max width of the [Wraper](section-css_lib.html#kssref-css_lib-helpers-wrapper) helper
// $css-var-prefix = 'ml-' - prefix for the CSS custom properties, which are generated in the values of utilities. For example, value of `W-$myCard` with prefix: `var(--ml-myCard)`, and without:  `var(--myCard)`
// $class-prefix - prefix, which will be added to CSS classes of all utilities. This can be useful when using mlut on top of the existing CSS
//
// Styleguide: settings.general

// TODO: add docs
// Generic CSS
//
// Generic styles like a reset/normalize, setting `box-sizing` etc. See example here.
//
/// Styleguide: settings.general.generic_css

// TODO: add docs for css vars
// CSS variables
//
// Settings of global [CSS custom properties](section-css_lib.html#kssref-css_lib-styles-css_vars) which used in mlut.
//
/// Styleguide: settings.general.css_vars

// Names
//
// In addition to variables, the names of custom properties are contained in the map `$css-vars`.
// Below are the names of the variables, the corresponding keys in the map and names of custom properties.
//
// $var-gg = --gg - `gg`.
// $var-grid-cols = --grid-cols - `grid-cols`.
//
/// Styleguide: settings.general.css_vars.names

$ratio-box-flex: false !default;
$browser-font-size: 16px !default;
$css-transition-time: 0.3s !default;
$wrapper-max-width: 1200px !default;

$su: 0.25rem !default;

$is-test-env: false !default;

$css-var-prefix: 'ml-' !default;
$css-vars-fallback: false !default;

$class-prefix: '' !default;

$hex-digits: (
	'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'
);

$dec-digits: (
	'0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
);

$spec-chars: (
	' ', '!', '#', '$', '%', '&', '(', ')', '*', '+', ',', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', ']', '^', '`', '{', '|', '}', '~', "'",
) !default;

$number-max: 2e9 !default;

$general-cfg: (
	'main-directions': (
		't': top,
		'r': right,
		'b': bottom,
		'l': left,
	),
	'custom-unit-values': (
		'u': $su,
	),
	'units': (
		'css': (
			'px': 1px,
			'cm': 1cm,
			'mm': 1mm,
			'q': 1q,
			'rem': 1rem,
			'%': 1%,
			'fr': 1fr,
			'ch': 1ch,
			'pc': 1pc,
			'in': 1in,
			'em': 1em,
			'pt': 1pt,
			'ex': 1ex,
			'vw': 1vw,
			'vh': 1vh,
			'vmin': 1vmin,
			'vmax': 1vmax,
			'deg': 1deg,
			'turn': 1turn,
			'grad': 1grad,
			'rad': 1rad,
			's': 1s,
			'ms': 1ms,
			'hz': 1hz,
			'khz': 1khz,
			'dpi': 1dpi,
			'dpcm': 1dpcm,
			'dppx': 1dppx,
			'x': 1x,
		),
		'custom': (
			'': 1,
			'gg': 1gg,
			'gc': 1gc,
			'u': 1u,
			'd': 1d,
			'e': 1e,
			'g': 1g,
			'i': 1i,
			'p': 1p,
			'r': 1r,
			'ra': 1ra,
			't': 1t,
		),
	),
	'generic-css': (
		'border-box': true,
		'sup-sub-no-v-align': true,
		'embeds-v-align': true,
		'embeds-aspect-ratio': true,
		'forms-normalize': true,
		'embeds-block': false,
		'svg-fill-cur-color': false,
		'default-reduce-motion': false,
		'reset-border': false,
		'reset': false,
	),
	'css-vars': (
		'gg': 'gg',
		'gs-formula-diff': 'gsfd',
		'gs-columns-count': 'gscc',
	),
) !default;

$general-config: () !default;
$general-config-ext: () !default;

$general-cfg: map.deep-merge($general-cfg, $general-config);
$general-cfg: map.deep-merge($general-cfg, $general-config-ext);

$main-directions: map.get($general-cfg, 'main-directions');

$units-all: map.merge(
	map.get($general-cfg, 'units', 'css'),
	map.get($general-cfg, 'units', 'custom'),
);

$-prefixed-vars: ();

@each $key, $value in map.get($general-cfg, 'css-vars') {
	$-prefixed-vars: map.set(
		$-prefixed-vars, $key, string.unquote('--#{$css-var-prefix}#{$value}')
	);
}

$general-cfg: map.set($general-cfg, 'css-vars', $-prefixed-vars);

$var-gg: map.get($general-cfg, 'css-vars', 'gg');
$var-gsfd: map.get($general-cfg, 'css-vars', 'gs-formula-diff');
$var-gscc: map.get($general-cfg, 'css-vars', 'gs-columns-count');

$base-border-box: map.get($general-cfg, 'generic-css', 'border-box');
